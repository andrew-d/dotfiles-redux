#!/bin/sh

# Include our script first, to reduce incompatibilities
export __DOTFILES_IS_TEST=true
CURR_DIR="$(dirname "$0")"
. "$CURR_DIR"/../bin/install.sh


# Tests start below
# --------------------------------------------------
describe "backup_file()"

before() {
  _test_previousdir="$PWD"
  _test_workingdir="$(mktemp -d -t dotfiles.XXXXXX)"
  cd -P -- "$_test_workingdir"

  BACKUP_DIR="$_test_workingdir/backups"
}

after() {
  cd -- "$_test_previousdir"
  rm -rf -- "$_test_workingdir"
}

it_will_move_a_file_when_backing_up() {
  echo 'this is a file' > back_me_up.txt
  backup_file "back_me_up.txt"

  test '!' '-e' 'back_me_up.txt'
  test "$DID_BACKUP" "-eq" "1"
}

it_will_move_to_the_backup_directory() {
  echo 'this is a file' > back_me_up.txt
  backup_file "back_me_up.txt"

  test '-e' "$BACKUP_DIR/back_me_up.txt"
}

it_will_preserve_file_contents() {
  echo 'this is a file' > back_me_up.txt
  backup_file "back_me_up.txt"

  contents="$(cat "$BACKUP_DIR/back_me_up.txt")"
  test "$contents" "=" "this is a file"
}

it_will_ignore_nonexistant_files() {
  backup_file_if_exists "nonexistant.txt"

  # Ensure no files in the backup directory
  num_files=$(ls "$BACKUP_DIR/" | wc -l)
  test "$num_files" "-eq" 0
}
